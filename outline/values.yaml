# Default values for outline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

env:
  nodeEnv: "production"

  # Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
  # in your terminal to generate a random value.
  secretKey: ""
  # Generate a unique random key. The format is not important but you could still use
  # `openssl rand -hex 32` in your terminal to produce this.
  utilsSecret: ""


image:
  # Overrides the image repository. default: docker.getoutline.com/outlinewiki/outline
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# https://github.com/bitnami/charts/blob/main/bitnami/mastodon/templates/_helpers.tpl
# https://github.com/bitnami/charts/blob/main/bitnami/mastodon/values.yaml

## @section External S3 parameters
## All of these values are only used when redis.enabled is set to false
## @param externalS3.host External S3 host
## @param externalS3.port External S3 port number
## @param externalS3.accessKeyID External S3 access key ID
## @param externalS3.accessKeySecret External S3 access key secret
## @param externalS3.existingSecret Name of an existing secret resource containing the S3 credentials
## @param externalS3.existingSecretAccessKeyIDKey Name of an existing secret key containing the S3 access key ID
## @param externalS3.existingSecretKeySecretKey Name of an existing secret key containing the S3 access key secret
## @param externalS3.protocol External S3 protocol
## @param externalS3.bucket External S3 bucket
## @param externalS3.region External S3 region
##
externalS3:
  host: ""
  port: 443
  accessKeyID: ""
  accessKeySecret: ""
  existingSecret: ""
  existingSecretAccessKeyIDKey: "root-user"
  existingSecretKeySecretKey: "root-password"
  protocol: "https"
  bucket: "outline"
  region: "us-east-1"


# https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  enabled: true
  global.storageClass: ""
  auth:
    database: outline-database
    username: outline
    password: outline-db-insecure-password

    # Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    enablePostgresUser: true
    postgresPassword: outline-db-insecure-password-admin


redis:
  enabled: true

minio:
  enabled: false