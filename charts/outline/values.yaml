# Default values for outline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


# REQUIRED
# Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
# in your terminal to generate a random value.
secretKey: ""

# REQUIRED
# Generate a unique random key. The format is not important but you could still use
# `openssl rand -hex 32` in your terminal to produce this.
utilsSecret: ""

# REQUIRED
# URL should point to the fully qualified, publicly accessible URL.
# This is env var URL for external access.
# example:
# url: https://app.outline.dev
url: ""

# REQUIRED any one of the methods
auth:
  # To configure Slack auth, you'll need to create an Application at
  # => https://api.slack.com/apps
  #
  # When configuring the Client ID, add a redirect URL under "OAuth & Permissions":
  # https://<URL>/auth/slack.callback
  slackClientId: ""
  slackClientSecret: ""

  # To configure Google auth, you'll need to create an OAuth Client ID at
  # => https://console.cloud.google.com/apis/credentials
  #
  # When configuring the Client ID, add an Authorized redirect URI:
  # https://<URL>/auth/google.callback
  googleClientId: ""
  googleClientSecret: ""

  # To configure Microsoft/Azure auth, you'll need to create an OAuth Client. See
  # the guide for details on setting up your Azure App:
  # => https://wiki.generaloutline.com/share/dfa77e56-d4d2-4b51-8ff8-84ea6608faa4
  azureClientId: ""
  azureClientSecret: ""
  azureResourceAppId: ""

  # To configure generic OIDC auth, you'll need some kind of identity provider.
  # See documentation for whichever IdP you use to acquire the following info:
  # Redirect URI is https://<URL>/auth/oidc.callback
  oidcClientId: ""
  # https://github.com/outline/outline/discussions/3299#discussioncomment-2483067
  # if possible, generate it manually. If you are using authentik, this will be happen.
  oidcClientSecret: ""
  oidcAuthUri: ""
  oidcTokenUri: ""
  oidcUserinfoUri: ""
  
  # Specify which claims to derive user information from
  # Supports any valid JSON path with the JWT payload
  oidcUsernameClaim: "preferred_username"
  # Display name for OIDC authentication
  oidcDisplayName: "OpenID Connect"
  # Space separated auth scopes.
  oidcScopes: "openid profile email"

image:
  # Overrides the image repository. default: docker.getoutline.com/outlinewiki/outline
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 180
  path: /_health
  periodSeconds: 20
  port: http
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  path: /_health
  periodSeconds: 10
  port: http
  successThreshold: 1
  timeoutSeconds: 5

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# https://github.com/bitnami/charts/blob/main/bitnami/mastodon/templates/_helpers.tpl
# https://github.com/bitnami/charts/blob/main/bitnami/mastodon/values.yaml




## @section PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.password Password for the custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
## @param postgresql.primary.service.ports.postgresql PostgreSQL service port
##
postgresql:
  enabled: true
  auth:
    username: outline
    password: ""
    database: outline_db
    existingSecret: ""
  architecture: standalone
  primary:
    service:
      ports:
        postgresql: 5432


## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalDatabase.host Database host
## @param externalDatabase.port Database port number
## @param externalDatabase.user Non-root username for JupyterHub
## @param externalDatabase.password Password for the non-root username for JupyterHub
## @param externalDatabase.database JupyterHub database name
## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the database credentials
##
externalDatabase:
  host: ""
  port: 5432
  user: postgres
  database: mastodon
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: "db-password"


## @section Redis sub-chart parameters
##
redis:
  ## @param redis.enabled Deploy Redis subchart
  ##
  enabled: true
  ## @param redis.architecture Set Redis architecture
  ##
  architecture: standalone
  ## @param redis.existingSecret Name of a secret containing redis credentials
  ##
  existingSecret: ""
  ## @param redis.master.service.ports.redis Redis port
  ##
  master:
    service:
      ports:
        redis: 6379


## @section External Redis parameters
## All of these values are only used when redis.enabled is set to false
## @param externalRedis.host Redis host
## @param externalRedis.port Redis port number
## @param externalRedis.password Password for the Redis
## @param externalRedis.existingSecret Name of an existing secret resource containing the Redis credentials
## @param externalRedis.existingSecretPasswordKey Name of an existing secret key containing the Redis credentials
##
externalRedis:
  host: ""
  port: 6379
  password: ""
  existingSecret: ""
  existingSecretPasswordKey: ""


## @section MinIO&reg; chart parameters
## @extra minio For full list of MinIO&reg; values configurations please refere [here](https://github.com/bitnami/charts/tree/main/bitnami/minio)
##
minio:
  ## @param minio.enabled Enable/disable MinIO&reg; chart installation
  ## to be used as an objstore for Mastodon
  ##
  enabled: true
  ## MinIO&reg; authentication parameters
  ##
  auth:
    ## @param minio.auth.rootUser MinIO&reg; root username
    ##
    rootUser: admin
    ## @param minio.auth.rootPassword Password for MinIO&reg; root user
    ##
    rootPassword: ""
    ## @param minio.auth.existingSecret Name of an existing secret containing the MinIO&reg; credentials
    ##
    existingSecret: ""
  ## @param minio.defaultBuckets Comma, semi-colon or space separated list of MinIO&reg; buckets to create
  ##
  defaultBuckets: "s3storage"

  ## @param minio.provisioning.enabled Enable/disable MinIO&reg; provisioning job
  ## @param minio.provisioning.extraCommands Extra commands to run on MinIO&reg; provisioning job
  ##
  provisioning:
    enabled: true
    # We need to allow downloads in order for the UI to work
    extraCommands: ["mc anonymous set download provisioning/s3storage"]

  ## @param minio.tls.enabled Enable/disable MinIO&reg; TLS support
  ##
  tls:
    enabled: false
  ## @param minio.service.type MinIO&reg; service type
  ## @param minio.service.loadBalancerIP MinIO&reg; service LoadBalancer IP
  ## @param minio.service.ports.api MinIO&reg; service port
  ##
  service:
    type: ClusterIP
    loadBalancerIP: ""
    ports:
      api: 80

## @section External S3 parameters
## All of these values are only used when redis.enabled is set to false
## @param externalS3.host External S3 host
## @param externalS3.port External S3 port number
## @param externalS3.accessKeyID External S3 access key ID
## @param externalS3.accessKeySecret External S3 access key secret
## @param externalS3.existingSecret Name of an existing secret resource containing the S3 credentials
## @param externalS3.existingSecretAccessKeyIDKey Name of an existing secret key containing the S3 access key ID
## @param externalS3.existingSecretKeySecretKey Name of an existing secret key containing the S3 access key secret
## @param externalS3.protocol External S3 protocol
## @param externalS3.bucket External S3 bucket
## @param externalS3.region External S3 region
##
externalS3:
  host: ""
  port: 443
  accessKeyID: ""
  accessKeySecret: ""
  existingSecret: ""
  existingSecretAccessKeyIDKey: "root-user"
  existingSecretKeySecretKey: "root-password"
  protocol: "https"
  bucket: "outline"
  region: "us-east-1"